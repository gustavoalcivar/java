/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package basedatosiii;

import javax.swing.JOptionPane;

/**
 *
 * @author GUSTAVO
 */
public class Esquema extends javax.swing.JFrame {

    private final String esq;

    Esquema(String esque) {
        esq = esque;
        initComponents();
        setLocationRelativeTo(null);
        listaTablas.removeAll();
        labelTitulo.setText("ESQUEMA " + esq);
        Consulta.realizarConsultaLista("select table_name from tabs order by table_name", listaTablas);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botonRegresar = new javax.swing.JButton();
        labelTitulo = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaTablas = new javax.swing.JList();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaRegistros = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        areaScript = new javax.swing.JTextArea();
        botonEjecutar = new javax.swing.JButton();
        botonNuevoRegistro = new javax.swing.JButton();
        botonEliminarRegistro = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ESQUEMA");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        botonRegresar.setText("Regresar");
        botonRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRegresarActionPerformed(evt);
            }
        });
        getContentPane().add(botonRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 10, 90, -1));

        labelTitulo.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        labelTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTitulo.setText("ESQUEMA");
        getContentPane().add(labelTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 830, -1));

        jLabel3.setText("Registros");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 300, -1, -1));

        jLabel4.setText("Tablas");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, -1, -1));

        listaTablas.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { " ", " ", " " };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        listaTablas.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listaTablasValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(listaTablas);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 40, 340, 190));

        tablaRegistros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaRegistrosMouseClicked(evt);
            }
        });
        tablaRegistros.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tablaRegistrosKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tablaRegistrosKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tablaRegistros);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 320, 800, 200));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Ejecutar Script"));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        areaScript.setColumns(20);
        areaScript.setRows(5);
        jScrollPane3.setViewportView(areaScript);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 350, 150));

        botonEjecutar.setText("Ejecutar");
        botonEjecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEjecutarActionPerformed(evt);
            }
        });
        jPanel1.add(botonEjecutar, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 180, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 50, 380, 220));

        botonNuevoRegistro.setText("Nuevo registro");
        botonNuevoRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonNuevoRegistroActionPerformed(evt);
            }
        });
        getContentPane().add(botonNuevoRegistro, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 290, 150, -1));

        botonEliminarRegistro.setText("Eliminar registro seleccionado");
        botonEliminarRegistro.setEnabled(false);
        botonEliminarRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarRegistroActionPerformed(evt);
            }
        });
        getContentPane().add(botonEliminarRegistro, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 290, 290, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void listaTablasValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listaTablasValueChanged
        listaTablas.removeAll();
        Consulta.realizarConsultaTabla("select * from " + listaTablas.getSelectedValue(), tablaRegistros);
        botonEliminarRegistro.setEnabled(false);
    }//GEN-LAST:event_listaTablasValueChanged

    private void botonRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRegresarActionPerformed
        AdministrarUsuarios au = new AdministrarUsuarios();
        dispose();
        au.setVisible(true);
    }//GEN-LAST:event_botonRegresarActionPerformed

    private void botonEjecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEjecutarActionPerformed
        areaScript.setText(areaScript.getText().trim());//Elimina los espacios en blanco del inicio y final
        if (!areaScript.getText().equals("")) {
            try {
                if (areaScript.getText().substring(0, 6).equals("select")) {
//Si la consulta empieza con la palabra select, se usa el método que muestra la consulta en una tabla
//Caso contrario realiza la consulta con el método realizarConsulta
                    Consulta.realizarConsultaTabla(areaScript.getText(), tablaRegistros);
                } else {
                    Consulta.realizarConsulta(areaScript.getText());
                    Esquema es = new Esquema(esq);
                    dispose();
                    es.setVisible(true);
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex, "ERROR", 0);
            }
        } else {
            JOptionPane.showMessageDialog(null, "No se encontró ningún script", "ERROR", 0);
        }

    }//GEN-LAST:event_botonEjecutarActionPerformed

    private void botonNuevoRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonNuevoRegistroActionPerformed
        String datos[];
        if (listaTablas.getSelectedIndex() >= 0) { //Se verifica que se halla seleccionado una tabla para el insert
//Se obtienen los tipos de dato y nombres de las columnas de la tabla para el nuevo registro
            String tipos[] = Consulta.obtenerTiposDeDatosConsulta("select * from " + listaTablas.getSelectedValue());
            String nombres[] = Consulta.obtenerNombresColumnasConsulta("select * from " + listaTablas.getSelectedValue());
            datos = new String[nombres.length];
//Este for es para recoger los datos del nuevo registro, solo en caso de que sea una fecha se indica el formato            
            for (int i = 0; i < tipos.length; i++) {
                if (tipos[i].equals("DATE")) {
                    datos[i] = JOptionPane.showInputDialog(null, "Ingrese un dato para "
                            + nombres[i] + "\nCon el formato: dd-mm-aaaa", "NUEVO REGISTRO", 1);
                } else {
                    datos[i] = JOptionPane.showInputDialog(null, "Ingrese un dato para "
                            + nombres[i], "NUEVO REGISTRO", 1);
                }
            }
//La cadena insert va a tener la consulta sql            
            String insert = "insert into " + listaTablas.getSelectedValue() + " values(";
            for (int i = 0; i < datos.length; i++) {
                if (!datos[i].equals("")) {
                    switch (tipos[i]) {
//Si el tipo de dato en NUMBER o FLOAT se va tal como se ingresó                       
                        case "NUMBER":
                            insert = insert + datos[i];
                            break;
                        case "FLOAT":
                            insert = insert + datos[i];
                            break;
//Si el tipo de dato es DATE hay que hacer la transformación y colocar lo ingresado entre comiilas simples                            
                        case "DATE":
                            insert = insert + "to_date('" + datos[i] + "','dd-mm-yyyy')";
                            break;
//Si es cualquier otro tipo de dato, va simplemente entre comillas simples                            
                        default:
                            insert = insert + "'" + datos[i] + "'";
                            break;
                    }
                } else {
//Si no se ingresó ningun caracter, se coloca el valor NULL                    
                    insert = insert + "NULL";
                }
                if (i <= datos.length - 2) {
                    insert = insert + ",";
                }
            }
            insert = insert + ")";
            Consulta.realizarConsulta(insert);
            Esquema es = new Esquema(esq);
            dispose();
            es.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione una tabla", "ERROR", 0);
        }
    }//GEN-LAST:event_botonNuevoRegistroActionPerformed

    private void botonEliminarRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarRegistroActionPerformed
        if (listaTablas.getSelectedIndex() >= 0) {
            int opcion = JOptionPane.showConfirmDialog(null, "Esta seguro de eliminar este registro", "ELIMINAR REGISTRO", 2);
            if (opcion == 0) {
                String nombres[] = Consulta.obtenerNombresColumnasConsulta("select * from " + listaTablas.getSelectedValue());
//Las cadena delete1 es para los casos en los que la llave primaria no necesite estar entre comillas simples               
//Las cadena delete2 es para los casos en los que la llave primaria necesite estar entre comillas simples               
                String delete1 = "delete from " + listaTablas.getSelectedValue() + " where "
                        + nombres[0] + "="
                        + tablaRegistros.getValueAt(tablaRegistros.getSelectedRow(), 0);
                String delete2 = "delete from " + listaTablas.getSelectedValue() + " where "
                        + nombres[0] + "='"
                        + tablaRegistros.getValueAt(tablaRegistros.getSelectedRow(), 0) + "'";
                Esquema es = new Esquema(esq);
//Si no se pudo realizar la eliminación del registro da un mensaje de error               
                if (!Consulta.realizarConsultaBoolean(delete1)) {
                    if (!Consulta.realizarConsultaBoolean(delete2)) {
                        JOptionPane.showMessageDialog(null, "No se pudo completar la operación", "ERROR", 0);
                    }
                }

                dispose();
                es.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(null, "Seleccione una tabla", "ERROR", 0);
            }
        }
    }//GEN-LAST:event_botonEliminarRegistroActionPerformed

    private void tablaRegistrosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablaRegistrosKeyReleased

    }//GEN-LAST:event_tablaRegistrosKeyReleased

    private void tablaRegistrosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablaRegistrosKeyPressed

    }//GEN-LAST:event_tablaRegistrosKeyPressed

    private void tablaRegistrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaRegistrosMouseClicked
        botonEliminarRegistro.setEnabled(true); //Cuando se selecciona un registro se habilita la opción de eliminar
    }//GEN-LAST:event_tablaRegistrosMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaScript;
    private javax.swing.JButton botonEjecutar;
    private javax.swing.JButton botonEliminarRegistro;
    private javax.swing.JButton botonNuevoRegistro;
    private javax.swing.JButton botonRegresar;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel labelTitulo;
    private javax.swing.JList listaTablas;
    private javax.swing.JTable tablaRegistros;
    // End of variables declaration//GEN-END:variables

}
