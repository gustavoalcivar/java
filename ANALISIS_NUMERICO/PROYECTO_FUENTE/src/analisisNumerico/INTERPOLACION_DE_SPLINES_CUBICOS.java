/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * EscalarVector.java
 *
 * Created on 19/04/2013, 11:29:18 AM
 */
package analisisNumerico;

import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import javax.swing.JOptionPane;

/**
 *
 * @author gustavo
 */
public class INTERPOLACION_DE_SPLINES_CUBICOS extends javax.swing.JFrame {

    /** Creates new form EscalarVector */
    public INTERPOLACION_DE_SPLINES_CUBICOS() {
        initComponents();
        setLocationRelativeTo(null);
        botonEvaluar.setEnabled(false);
    }
    private double x[],a[],b[],c[],d[],h[],A[][];
    private int tam1=-1,tam2=-1;
    private String funcion[],stringIntervalo[];
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        botonGenerar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        textComponentesX = new javax.swing.JTextArea();
        botonCalcular = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        textMatrices = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        textComponentesY = new javax.swing.JTextArea();
        botonLeerArchivo = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        textH = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        textResultado = new javax.swing.JTextArea();
        panelGrafica = new javax.swing.JPanel();
        botonEvaluar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Interpolación (Splines cúbicos)");
        setResizable(false);

        jLabel2.setText("Componentes x:");

        jLabel3.setText("Ingrese las componentes de los puntos en una sola linea y separados por espacios;");

        botonGenerar.setText("Generar puntos aleatorios");
        botonGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGenerarActionPerformed(evt);
            }
        });

        textComponentesX.setColumns(20);
        textComponentesX.setRows(5);
        jScrollPane1.setViewportView(textComponentesX);

        botonCalcular.setText("Calcular");
        botonCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCalcularActionPerformed(evt);
            }
        });

        textMatrices.setEditable(false);
        textMatrices.setColumns(20);
        textMatrices.setRows(5);
        jScrollPane2.setViewportView(textMatrices);

        jLabel4.setText("Resultado:");

        jLabel5.setText("Componentes y:");

        textComponentesY.setColumns(20);
        textComponentesY.setRows(5);
        jScrollPane3.setViewportView(textComponentesY);

        botonLeerArchivo.setText("Leer datos del archivo");
        botonLeerArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonLeerArchivoActionPerformed(evt);
            }
        });

        jLabel6.setText("o genere puntos aleatorios");

        jLabel7.setText("Las componentes x deben estar ordenados ascendentemente");

        textH.setEditable(false);
        textH.setColumns(20);
        textH.setRows(5);
        jScrollPane4.setViewportView(textH);

        jLabel8.setText("h0 h1 ... hn:");

        textResultado.setEditable(false);
        textResultado.setColumns(20);
        textResultado.setRows(5);
        jScrollPane5.setViewportView(textResultado);

        panelGrafica.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout panelGraficaLayout = new javax.swing.GroupLayout(panelGrafica);
        panelGrafica.setLayout(panelGraficaLayout);
        panelGraficaLayout.setHorizontalGroup(
            panelGraficaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelGraficaLayout.setVerticalGroup(
            panelGraficaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        botonEvaluar.setText("Evaluar");
        botonEvaluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEvaluarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 730, Short.MAX_VALUE)
                        .addGap(449, 449, 449))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(botonGenerar, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(botonLeerArchivo))
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(botonCalcular)
                                        .addGap(28, 28, 28)
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(58, 58, 58)
                                        .addComponent(panelGrafica, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(32, 32, 32)
                                        .addComponent(jLabel4)
                                        .addGap(0, 598, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jScrollPane5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(botonEvaluar)))))
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel3)
                .addGap(2, 2, 2)
                .addComponent(jLabel6)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel4))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(6, 6, 6)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(jLabel5))
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botonEvaluar)
                        .addGap(79, 79, 79)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botonGenerar)
                            .addComponent(botonLeerArchivo))
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(botonCalcular)
                                .addComponent(jLabel8)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE))
                    .addComponent(panelGrafica, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void botonGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGenerarActionPerformed
    llenar(1);
}//GEN-LAST:event_botonGenerarActionPerformed

private void botonCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCalcularActionPerformed
    botonEvaluar.setEnabled(false);
    textResultado.setText("");
    DecimalFormatSymbols dfs=new DecimalFormatSymbols();
        dfs.setDecimalSeparator('.');//se establece el caracter para separar los decimales
        DecimalFormat df = new DecimalFormat("0.0000",dfs);//número de cifras después del punto decimal
    Metodos.validarTextArea(textComponentesX);
    Metodos.validarTextArea(textComponentesY);
    String texto1=textComponentesX.getText();
    String texto2=textComponentesY.getText();
    texto1=Metodos.quitarEspaciosVector(texto1);
    texto2=Metodos.quitarEspaciosVector(texto2);
    if(Metodos.validarVector(texto1)&&textComponentesX.getLineCount()==1
            &&Metodos.validarVector(texto2)&&textComponentesY.getLineCount()==1){
        if(Metodos.contarElementos(texto1)==Metodos.contarElementos(texto2)){
            try{
                x=Metodos.leerVector(texto1);
                try{
                    if(Metodos.estaOrdenado(x)){
                        if(!Metodos.tieneElementosRepetidos(x)){
                            
                                a=Metodos.leerVector(texto2);
                                Metodos.imprimirVector(x,textComponentesX);
                                Metodos.imprimirVector(a,textComponentesY);
                                h=new double[x.length-1];
                                b=new double[x.length];
                                c=new double[x.length];
                                d=new double[x.length];
                                for(int i=0;i<x.length-1;i++){
                                    h[i]=x[i+1]-x[i];
                                }
                                A=Metodos.interpolacionSplines(x,a,h,textH,textResultado);
                                textMatrices.setText("");
                                textMatrices.append("\nMatriz A\n");
                                Metodos.imprimirMatriz2(A,x.length,x.length,textMatrices);
                                textMatrices.append("\nMatriz ampliada\n");
                                Metodos.imprimirMatriz2(A,x.length,x.length+1,textMatrices);
                               OperacionesMatrices.gauss_jordan(A,x.length,x.length+1,textMatrices,1);
                            
                            for(int i=0;i<x.length-1;i++){
                                c[i]=A[i][x.length];
                            }
                            for(int i=0;i<x.length-1;i++){
                                b[i]=(a[i+1]-a[i])/h[i]-(h[i]/3)*(2*c[i]+c[i+1]);
                                d[i]=(c[i+1]-c[i])/(3*h[i]);
                            }
                            imprimir();
                            botonEvaluar.setEnabled(true);
                            new GraficoSplines().GraficaFinal(x,a,b,c,d,panelGrafica);
                        }else Metodos.error("Los elementos de x no se deben repetir");
                    }else Metodos.error("Las componentes x no están ordenadas");
                }catch(Exception ex){
                    Metodos.error(ex);
                }
            }catch(Exception ex){
                Metodos.error(ex);
            }
            }else Metodos.error("La cantidad de componentes x debe ser igual a la de componentes y");
    }else Metodos.error("Los datos ingresados no corresponden a puntos en el plano\n"
            + "O el valor de x no es válido");
}//GEN-LAST:event_botonCalcularActionPerformed

    private void botonLeerArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonLeerArchivoActionPerformed
        botonEvaluar.setEnabled(false);
        textResultado.setText("");
        if(Inicio.vecArchivo!=null){
            llenar(2);
        }else Metodos.errorArchivo();
    }//GEN-LAST:event_botonLeerArchivoActionPerformed

    private void botonEvaluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEvaluarActionPerformed
        double _x;
        String punto;
        double valorFuncion;
        try{
            punto=JOptionPane.showInputDialog(null,"Ingrese el valor en el que desea evaluar la función","",3);
            _x=Double.parseDouble(punto);
            valorFuncion=Metodos.evaluarSpines(_x,x,a,b,c,d);
            if(Metodos.puntoValido)JOptionPane.showMessageDialog(null,"El valor de la función en "+_x+" es "+valorFuncion);
        }catch(Exception ex){
            Metodos.error(ex);
        }
    }//GEN-LAST:event_botonEvaluarActionPerformed

    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonCalcular;
    private javax.swing.JButton botonEvaluar;
    private javax.swing.JButton botonGenerar;
    private javax.swing.JButton botonLeerArchivo;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JPanel panelGrafica;
    private javax.swing.JTextArea textComponentesX;
    private javax.swing.JTextArea textComponentesY;
    private javax.swing.JTextArea textH;
    private javax.swing.JTextArea textMatrices;
    private javax.swing.JTextArea textResultado;
    // End of variables declaration//GEN-END:variables

    private void llenar(int k) {
        DecimalFormatSymbols dfs=new DecimalFormatSymbols();
        dfs.setDecimalSeparator('.');//se establece el caracter para separar los decimales
        DecimalFormat df = new DecimalFormat("0.0000",dfs);//número de cifras después del punto decimal
        try{
            String n1;
            n1=JOptionPane.showInputDialog(null,"Ingrese la cantidad de puntos","",3);
            try{
                tam1=Integer.parseInt(n1);
            }catch(Exception ex){
                Metodos.error(ex);
            }
        }catch(Exception ex){
            Metodos.error(ex);
        }
        if(tam1>=1){
            tam2=tam1;
            x=new double[tam1];
            a=new double[tam2];
            do{
                if(k==1)x=Metodos.llenarVectorAleatorio(tam1);
                else x=Metodos.llenarVectorArchivo(tam1);
                Metodos.burbuja(x);
            }while(Metodos.tieneElementosRepetidos(x));
            try{
                   
                        if(k==1)a=Metodos.llenarVectorAleatorio(tam1);
                        else a=Metodos.llenarVectorArchivo(tam1);
                        Metodos.imprimirVector(x,textComponentesX);
                        Metodos.imprimirVector(a,textComponentesY);
                        h=new double[x.length-1];
                        c=new double[x.length];
                        b=new double[x.length];
                        d=new double[x.length];
                       for(int i=0;i<x.length-1;i++){
                            h[i]=x[i+1]-x[i];
                        }
                        A=Metodos.interpolacionSplines(x,a,h,textH,textResultado);
                        textMatrices.setText("");
                        textMatrices.append("\nMatriz A\n");
                        Metodos.imprimirMatriz2(A,x.length,x.length,textMatrices);
                        textMatrices.append("\nMatriz ampliada\n");
                        Metodos.imprimirMatriz2(A,x.length,x.length+1,textMatrices);
                        OperacionesMatrices.gauss_jordan(A,x.length,x.length+1,textMatrices,1);
                        
                        for(int i=0;i<x.length-1;i++){
                                c[i]=A[i][x.length];
                        }
                        for(int i=0;i<x.length-1;i++){
                            b[i]=(a[i+1]-a[i])/h[i]-(h[i]/3)*(2*c[i]+c[i+1]);
                            d[i]=(c[i+1]-c[i])/(3*h[i]);
                        }
                        imprimir();
                        botonEvaluar.setEnabled(true);
                        new GraficoSplines().GraficaFinal(x,a,b,c,d,panelGrafica);
               
            }catch(Exception ex){
                Metodos.error(ex);
            }
        }
    }

    private void imprimir() {
        DecimalFormatSymbols dfs=new DecimalFormatSymbols();
        dfs.setDecimalSeparator('.');//se establece el caracter para separar los decimales
        DecimalFormat df = new DecimalFormat("0.0000",dfs);//número de cifras después del punto decimal
        textResultado.setText("");
        funcion=new String[x.length-1];
        stringIntervalo=new String[x.length-1];
        for(int i=0;i<x.length-1;i++){
            funcion[i]=String.valueOf(df.format(a[i]))+"+"+String.valueOf(df.format(b[i]))+
            "(x-"+String.valueOf(df.format(x[i]))+")"+"+"+String.valueOf(df.format(c[i]))+
            "(x-"+String.valueOf(df.format(x[i]))+")²"+"+"+String.valueOf(df.format(d[i]))+
            "(x-"+String.valueOf(df.format(x[i]))+")³";
            stringIntervalo[i]="    \t, "+String.valueOf(df.format(x[i]))+"<x<"+String.valueOf(df.format(x[i+1])+"\n");
            textResultado.append(funcion[i]+stringIntervalo[i]);
        }
        
    }

}
