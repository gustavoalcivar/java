/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * EscalarVector.java
 *
 * Created on 19/04/2013, 11:29:18 AM
 */
package analisisNumerico;

import javax.swing.JOptionPane;

/**
 *
 * @author gustavo
 */
public class MultiplicacionMatrices extends javax.swing.JFrame {

    /** Creates new form EscalarVector */
    public MultiplicacionMatrices() {
        initComponents();
        setLocationRelativeTo(null);
    }
    double matriz1[][],matriz2[][],resultado[][];
    int filas1=-1,columnas1=-1,filas2=-1,columnas2=-1;
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        botonGenerar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        textMatriz1 = new javax.swing.JTextArea();
        botonCalcular = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        textResultado = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        textMatriz2 = new javax.swing.JTextArea();
        botonLeerArchivo = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Multiplicación de matrices");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setText("Matriz 1:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 36, -1, -1));

        jLabel3.setText("Ingrese los elementos de las matrices separados por espacios y saltos de linea; o genere matrices aleatorias");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 794, -1));

        botonGenerar.setText("Generar matrices aleatorias");
        botonGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGenerarActionPerformed(evt);
            }
        });
        getContentPane().add(botonGenerar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 325, 234, -1));

        textMatriz1.setColumns(20);
        textMatriz1.setRows(5);
        jScrollPane1.setViewportView(textMatriz1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 61, 827, 118));

        botonCalcular.setText("Calcular");
        botonCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCalcularActionPerformed(evt);
            }
        });
        getContentPane().add(botonCalcular, new org.netbeans.lib.awtextra.AbsoluteConstraints(542, 325, -1, -1));

        textResultado.setColumns(20);
        textResultado.setEditable(false);
        textResultado.setRows(5);
        jScrollPane2.setViewportView(textResultado);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 384, 837, 118));

        jLabel4.setText("Resultado:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 359, -1, -1));

        jLabel5.setText("Matriz 2:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 185, -1, -1));

        textMatriz2.setColumns(20);
        textMatriz2.setRows(5);
        jScrollPane3.setViewportView(textMatriz2);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 205, 827, 114));

        botonLeerArchivo.setText("Leer datos del archivo");
        botonLeerArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonLeerArchivoActionPerformed(evt);
            }
        });
        getContentPane().add(botonLeerArchivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(369, 325, -1, -1));

        jButton2.setForeground(new java.awt.Color(0, 0, 204));
        jButton2.setText("SALIR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 520, -1, -1));

        jButton1.setForeground(new java.awt.Color(51, 0, 255));
        jButton1.setText("REGRESAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 520, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void botonGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGenerarActionPerformed
    try{
        String f1;
        f1=JOptionPane.showInputDialog(null,"Ingrese el número de filas de la primera matriz","",3);
        try{
            filas1=Integer.parseInt(f1);
        }catch(Exception ex){
            Metodos.error(ex);
        }
    }catch(Exception ex){
        Metodos.error(ex);
    }
    try{
        String c1;
        c1=JOptionPane.showInputDialog(null,"Ingrese el número de columnas de la primera matriz\n"
                + "(y filas de la segunda)","",3);
        try{
            columnas1=Integer.parseInt(c1);
        }catch(Exception ex){
            Metodos.error(ex);
        }
    }catch(Exception ex){
        Metodos.error(ex);
    }
    try{
        String c2;
        c2=JOptionPane.showInputDialog(null,"Ingrese el número de columnas de la segunda matriz)","",3);
        try{
            columnas2=Integer.parseInt(c2);
        }catch(Exception ex){
            Metodos.error(ex);
        }
    }catch(Exception ex){
        Metodos.error(ex);
    }
    if(filas1>=1&&columnas1>=1&&columnas2>=1){
        filas2=columnas1;
        matriz1=new double[filas1][columnas1];
        matriz2=new double[filas2][columnas2];
        matriz1=Metodos.llenarMatrizAleatorio(filas1,columnas1);
        matriz2=Metodos.llenarMatrizAleatorio(filas2,columnas2);
        Metodos.imprimirMatriz(matriz1,filas1,columnas1,textMatriz1);
        Metodos.imprimirMatriz(matriz2,filas2,columnas2,textMatriz2);
        resultado=Metodos.multiplicaciónMatrices(matriz1,matriz2,filas1,columnas1,filas2,columnas2);
        Metodos.imprimirMatriz(resultado,filas1,columnas2,textResultado);
    }
}//GEN-LAST:event_botonGenerarActionPerformed

private void botonCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCalcularActionPerformed
    Metodos.validarTextArea(textMatriz1);
    Metodos.validarTextArea(textMatriz2);
    if(Metodos.validarMatriz(textMatriz1)&&Metodos.validarMatriz(textMatriz2)){
        try{
            filas1=textMatriz1.getLineCount();
            String lista1[]=textMatriz1.getText().split("\n");
            for(int i=0;i<lista1.length;i++){
                lista1[i]=Metodos.quitarEspaciosVector(lista1[i]);
            }
            columnas1=Metodos.contarElementos(lista1[0])+1;
            filas2=textMatriz2.getLineCount();
            String lista2[]=textMatriz2.getText().split("\n");
            for(int i=0;i<lista2.length;i++){
                lista2[i]=Metodos.quitarEspaciosVector(lista2[i]);
            }
            columnas2=Metodos.contarElementos(lista2[0])+1;
            if(columnas1==filas2){         
                matriz1=Metodos.leerMatriz(textMatriz1);
                matriz2=Metodos.leerMatriz(textMatriz2);
                resultado=Metodos.multiplicaciónMatrices(matriz1,matriz2,filas1,columnas1,filas2,columnas2);
                Metodos.imprimirMatriz(resultado,filas1,columnas2,textResultado);
            }else Metodos.error("El número de columnas de la primera matriz debe ser igual a número de filas de la segunda");
        }catch(Exception ex){
            Metodos.error(ex);
        }
    }else Metodos.error("Los datos ingresados no corresponden a matrices");
}//GEN-LAST:event_botonCalcularActionPerformed

    private void botonLeerArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonLeerArchivoActionPerformed
        if(Inicio.vecArchivo!=null){
        try{
        String f1;
        f1=JOptionPane.showInputDialog(null,"Ingrese el número de filas de la primera matriz","",3);
        try{
            filas1=Integer.parseInt(f1);
        }catch(Exception ex){
            Metodos.error(ex);
        }
    }catch(Exception ex){
        Metodos.error(ex);
    }
    try{
        String c1;
        c1=JOptionPane.showInputDialog(null,"Ingrese el número de columnas de la primera matriz\n"
                + "(y filas de la segunda)","",3);
        try{
            columnas1=Integer.parseInt(c1);
        }catch(Exception ex){
            Metodos.error(ex);
        }
    }catch(Exception ex){
        Metodos.error(ex);
    }
    try{
        String c2;
        c2=JOptionPane.showInputDialog(null,"Ingrese el número de columnas de la segunda matriz)","",3);
        try{
            columnas2=Integer.parseInt(c2);
        }catch(Exception ex){
            Metodos.error(ex);
        }
    }catch(Exception ex){
        Metodos.error(ex);
    }
    if(filas1>=1&&columnas1>=1&&columnas2>=1){
        filas2=columnas1;
        matriz1=new double[filas1][columnas1];
        matriz2=new double[filas2][columnas2];
        matriz1=Metodos.llenarMatrizArchivo(filas1,columnas1);
        matriz2=Metodos.llenarMatrizArchivo(filas2,columnas2);
        Metodos.imprimirMatriz(matriz1,filas1,columnas1,textMatriz1);
        Metodos.imprimirMatriz(matriz2,filas2,columnas2,textMatriz2);
        resultado=Metodos.multiplicaciónMatrices(matriz1,matriz2,filas1,columnas1,filas2,columnas2);
        Metodos.imprimirMatriz(resultado,filas1,columnas2,textResultado);
    }
        }else Metodos.errorArchivo();
    }//GEN-LAST:event_botonLeerArchivoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Inicio rr = new Inicio();
        rr.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonCalcular;
    private javax.swing.JButton botonGenerar;
    private javax.swing.JButton botonLeerArchivo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea textMatriz1;
    private javax.swing.JTextArea textMatriz2;
    private javax.swing.JTextArea textResultado;
    // End of variables declaration//GEN-END:variables

}
