/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * EscalarVector.java
 *
 * Created on 19/04/2013, 11:29:18 AM
 */
package analisisNumerico;

import javax.swing.JOptionPane;

/**
 *
 * @author gustavo
 */
public class EliminacionGausiana extends javax.swing.JFrame {

    /** Creates new form EscalarVector */
    public EliminacionGausiana() {
        initComponents();
        setLocationRelativeTo(null);
    }
    double matriz[][];
    int filas=-1,columnas=-1;
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        botonGenerar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        textMatriz = new javax.swing.JTextArea();
        botonCalcular = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        textResultado = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        botonLeerArchivo = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        tipo = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Eliminación Gausiana");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setText("Ingrese los elementos de la matriz separados por espacios y saltos de linea; o genere una matriz aleatoria");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 802, -1));

        botonGenerar.setText("Generar matrices aleatorias");
        botonGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGenerarActionPerformed(evt);
            }
        });
        getContentPane().add(botonGenerar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, 234, -1));

        textMatriz.setColumns(20);
        textMatriz.setRows(5);
        jScrollPane1.setViewportView(textMatriz);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 61, 835, 118));

        botonCalcular.setText("Calcular");
        botonCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCalcularActionPerformed(evt);
            }
        });
        getContentPane().add(botonCalcular, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 200, -1, -1));

        textResultado.setEditable(false);
        textResultado.setColumns(20);
        textResultado.setRows(5);
        jScrollPane2.setViewportView(textResultado);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, 845, 240));

        jLabel4.setText("Resultado:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, -1, -1));

        botonLeerArchivo.setText("Leer datos del archivo");
        botonLeerArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonLeerArchivoActionPerformed(evt);
            }
        });
        getContentPane().add(botonLeerArchivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 200, -1, -1));

        jButton2.setForeground(new java.awt.Color(0, 0, 204));
        jButton2.setText("SALIR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 530, -1, -1));

        jButton1.setForeground(new java.awt.Color(51, 0, 255));
        jButton1.setText("REGRESAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 530, -1, -1));

        tipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "M. escalonada", "M. reducida" }));
        tipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoActionPerformed(evt);
            }
        });
        getContentPane().add(tipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 200, 210, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void botonGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGenerarActionPerformed
    llenar(1);
}//GEN-LAST:event_botonGenerarActionPerformed

private void botonCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCalcularActionPerformed
    Metodos.validarTextArea(textMatriz);
    if(Metodos.validarMatriz(textMatriz)){
        try{
            filas=textMatriz.getLineCount();
            String lista[]=textMatriz.getText().split("\n");
            for(int i=0;i<lista.length;i++){
                lista[i]=Metodos.quitarEspaciosVector(lista[i]);
            }
            columnas=Metodos.contarElementos(lista[0])+1;       
            matriz=Metodos.leerMatriz(textMatriz);
            textResultado.setText("");
            OperacionesMatrices.gauss_jordan(matriz,filas,columnas,textResultado,tipo.getSelectedIndex());
        }catch(Exception ex){
            Metodos.error(ex);
        }
    }else Metodos.error("Lo datos ingresados no corresponden a una matriz");
}//GEN-LAST:event_botonCalcularActionPerformed

    private void botonLeerArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonLeerArchivoActionPerformed
        if(Inicio.vecArchivo!=null){
            llenar(2);
        }else Metodos.errorArchivo();
    }//GEN-LAST:event_botonLeerArchivoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Inicio rr = new Inicio();
        rr.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void tipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tipoActionPerformed

    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonCalcular;
    private javax.swing.JButton botonGenerar;
    private javax.swing.JButton botonLeerArchivo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea textMatriz;
    private javax.swing.JTextArea textResultado;
    private javax.swing.JComboBox tipo;
    // End of variables declaration//GEN-END:variables

    private void llenar(int k) {
        try{
            String f;
            f=JOptionPane.showInputDialog(null,"Ingrese el número de filas de la matriz","",3);
            try{
                filas=Integer.parseInt(f);
            }catch(Exception ex){
                Metodos.error(ex);
            }
        }catch(Exception ex){
            Metodos.error(ex);
        }
        try{
            String c;
            c=JOptionPane.showInputDialog(null,"Ingrese el número de columnas de la matriz","",3);
            try{
                columnas=Integer.parseInt(c);
            }catch(Exception ex){
                Metodos.error(ex);
            }
        }catch(Exception ex){
            Metodos.error(ex);
        }
        if(filas>=1&&columnas>=1){
            matriz=new double[filas][columnas];
            if(k==1)matriz=Metodos.llenarMatrizAleatorio(filas,columnas);
            else matriz=Metodos.llenarMatrizArchivo(filas,columnas);
            Metodos.imprimirMatriz(matriz,filas,columnas,textMatriz);
            textResultado.setText("");
            OperacionesMatrices.gauss_jordan(matriz,filas,columnas,textResultado,tipo.getSelectedIndex());
        }
    }
}
