/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TablaClientes.java
 *
 * Created on 06/07/2011, 09:43:26 PM
 */

package interfazGraficaTablas;

import excepciones.FachadaException;
import fachadas.ListadoUbicaciones;
import interfazGraficaAgregar.AgregarRutas;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;
import objetoProyecto.Ubicacion;

/**
 *
 * @author Gustavo
 */
public class TablaUbicaciones extends javax.swing.JFrame {
private ListadoUbicaciones listaUbicaciones = new ListadoUbicaciones();
    
    /** Creates new form TablaClientes */
    public TablaUbicaciones() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    private class MyTableModel extends AbstractTableModel {

        private boolean DEBUG = true;
        private String[] columnNames = {"Codigo",
            "Nombre"
        };
        private Object[][] data = null;

        public MyTableModel(Object[][] data1) {
            this.data = data1;
        }

        public int getColumnCount() {
            return columnNames.length;
        }

        @Override
        public boolean isCellEditable(int fila, int col) {
            return true;
        }

        public int getRowCount() {
            return data.length;
        }

        @Override
        public String getColumnName(int col) {
            return columnNames[col];
        }

        public Object getValueAt(int row, int col) {
            return data[row][col];
        }
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        aceptar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaUbicaciones = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        listarTodos = new javax.swing.JButton();
        buscaCodigo = new javax.swing.JButton();
        buscaNombre = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Cooperativa");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        aceptar.setText("ACEPTAR");
        aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceptarActionPerformed(evt);
            }
        });

        tablaUbicaciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nombre"
            }
        ));
        tablaUbicaciones.setEnabled(false);
        tablaUbicaciones.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tablaUbicaciones);

        jLabel1.setText("CONSULTA UBICACIONES");

        listarTodos.setText("LISTAR TODOS");
        listarTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listarTodosActionPerformed(evt);
            }
        });

        buscaCodigo.setText("POR CÓDIGO");
        buscaCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscaCodigoActionPerformed(evt);
            }
        });

        buscaNombre.setText("POR NOMBRES");
        buscaNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscaNombreActionPerformed(evt);
            }
        });
        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(buscaCodigo)
                                    .addGap(18, 18, 18)
                                    .addComponent(buscaNombre))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(50, 50, 50)
                                    .addComponent(listarTodos))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(41, 41, 41)
                                    .addComponent(jLabel1)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addComponent(aceptar)))
                .addContainerGap(109, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(50, 50, 50)
                .addComponent(listarTodos)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buscaCodigo)
                    .addComponent(buscaNombre))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(aceptar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void aceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aceptarActionPerformed
        // TODO add your handling code here:
        AgregarRutas me=new AgregarRutas();
        dispose();
        me.setVisible(true);
    }//GEN-LAST:event_aceptarActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formComponentShown

    private void listarTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listarTodosActionPerformed
        // TODO add your handling code here:
        Vector lista = new Vector();
        try {
            lista = listaUbicaciones.consultaUbicaciones();
        } catch (FachadaException fe) {
            JOptionPane.showMessageDialog(null,"Error: " + fe.getMessage());
        }
        Object[][] tabla = new Object[lista.size()][2];
        this.tablaUbicaciones.removeAll();
        if(!lista.isEmpty()){
        for (int i = 0; i < lista.size(); i++) {
            Ubicacion c = (Ubicacion) lista.get(i);
            tabla[i][0] = c.getCodigoUbicacon();
            tabla[i][1] = c.getNombreUbicacion();
        }
        this.tablaUbicaciones.setModel(new MyTableModel(tabla));
	}
 else{
            JOptionPane.showMessageDialog(null, "No se encontraron ubicaciones");
 }
        
    }//GEN-LAST:event_listarTodosActionPerformed

    private void buscaCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscaCodigoActionPerformed
        // TODO add your handling code here:
        Vector lista = new Vector();
        String busca=JOptionPane.showInputDialog("Ingrese el código de la ubicación a buscar");
                try {
            lista = listaUbicaciones.consultaCodigoUbicacon(busca);
        } catch (FachadaException fe) {
            JOptionPane.showMessageDialog(null,"Error: " + fe.getMessage());
        }
          Object[][] tabla = new Object[lista.size()][2];
        this.tablaUbicaciones.removeAll();
        if(!lista.isEmpty()){
        for (int i = 0; i < lista.size(); i++) {
            Ubicacion c = (Ubicacion) lista.get(i);
            tabla[i][0] = c.getCodigoUbicacon();
            tabla[i][1] = c.getNombreUbicacion();
        }
        this.tablaUbicaciones.setModel(new MyTableModel(tabla));
	}
 else{
            JOptionPane.showMessageDialog(null, "No se encontraron ubicaciones");
 }
        
    }//GEN-LAST:event_buscaCodigoActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void buscaNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscaNombreActionPerformed
        // TODO add your handling code here:
        Vector lista = new Vector();
        String busca=JOptionPane.showInputDialog("Ingrese el nombre de la ubicación a buscar");
                try {
            lista = listaUbicaciones.consultaNombreUbicacion(busca);
        } catch (FachadaException fe) {
            JOptionPane.showMessageDialog(null,"Error: " + fe.getMessage());
        }
          Object[][] tabla = new Object[lista.size()][2];
        this.tablaUbicaciones.removeAll();
        if(!lista.isEmpty()){
        for (int i = 0; i < lista.size(); i++) {
            Ubicacion c = (Ubicacion) lista.get(i);
            tabla[i][0] = c.getCodigoUbicacon();
            tabla[i][1] = c.getNombreUbicacion();
            }
        this.tablaUbicaciones.setModel(new MyTableModel(tabla));
	}
 else{
            JOptionPane.showMessageDialog(null, "No se encontraron ubicaciones");
 }
        
    }//GEN-LAST:event_buscaNombreActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aceptar;
    private javax.swing.JButton buscaCodigo;
    private javax.swing.JButton buscaNombre;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton listarTodos;
    private javax.swing.JTable tablaUbicaciones;
    // End of variables declaration//GEN-END:variables

}
