/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TablaClientes.java
 *
 * Created on 06/07/2011, 09:43:26 PM
 */

package interfazGraficaTablas;

import excepciones.FachadaException;
import fachadas.ListadoClientes;
import interfazGrafica.Menu;
import java.util.Vector;
import javax.swing.JOptionPane;
import objetoProyecto.Cliente;
import javax.swing.table.AbstractTableModel;

/**
 *
 * @author Gustavo
 */
public class TablaClientes extends javax.swing.JFrame {
private ListadoClientes listaClientes = new ListadoClientes();
    
    /** Creates new form TablaClientes */
    public TablaClientes() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    private class MyTableModel extends AbstractTableModel {

        private boolean DEBUG = true;
        private String[] columnNames = {"Codigo",
            "Nombre",
            "Apellido",
            "Cedula",
            "Direccion",
            "Telefono","Email"
        };
        private Object[][] data = null;

        public MyTableModel(Object[][] data1) {
            this.data = data1;
        }

        public int getColumnCount() {
            return columnNames.length;
        }

        @Override
        public boolean isCellEditable(int fila, int col) {
            return true;
        }

        public int getRowCount() {
            return data.length;
        }

        @Override
        public String getColumnName(int col) {
            return columnNames[col];
        }

        public Object getValueAt(int row, int col) {
            return data[row][col];
        }
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        aceptar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaClientes = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        listarTodos = new javax.swing.JButton();
        buscaCodigo = new javax.swing.JButton();
        buscaNombre = new javax.swing.JButton();
        buscaApellidos = new javax.swing.JButton();
        buscaCedula = new javax.swing.JButton();
        buscaDireccion = new javax.swing.JButton();
        buscaTelefono = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Cooperativa");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        aceptar.setText("ACEPTAR");
        aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceptarActionPerformed(evt);
            }
        });

        tablaClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nombres", "Apellidos", "Cédula", "Dirección", "Teléfono", "Email"
            }
        ));
        tablaClientes.setEnabled(false);
        tablaClientes.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tablaClientes);

        jLabel1.setText("CONSULTA CLIENTES");

        listarTodos.setText("LISTAR TODOS");
        listarTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listarTodosActionPerformed(evt);
            }
        });

        buscaCodigo.setText("POR CÓDIGO");
        buscaCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscaCodigoActionPerformed(evt);
            }
        });

        buscaNombre.setText("POR  NOMBRES");
        buscaNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscaNombreActionPerformed(evt);
            }
        });

        buscaApellidos.setText("POR APELLIDOS");
        buscaApellidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscaApellidosActionPerformed(evt);
            }
        });

        buscaCedula.setText("POR CÉDULA");
        buscaCedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscaCedulaActionPerformed(evt);
            }
        });

        buscaDireccion.setText("POR DIRECCIÓN");
        buscaDireccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscaDireccionActionPerformed(evt);
            }
        });

        buscaTelefono.setText("POR TELÉFONO");
        buscaTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscaTelefonoActionPerformed(evt);
            }
        });
        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(422, 422, 422)
                .addComponent(jLabel1))
            .addGroup(layout.createSequentialGroup()
                .addGap(420, 420, 420)
                .addComponent(listarTodos))
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 804, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(454, 454, 454)
                .addComponent(aceptar))
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(buscaCodigo)
                .addGap(18, 18, 18)
                .addComponent(buscaNombre)
                .addGap(6, 6, 6)
                .addComponent(buscaApellidos)
                .addGap(6, 6, 6)
                .addComponent(buscaCedula)
                .addGap(6, 6, 6)
                .addComponent(buscaDireccion)
                .addGap(10, 10, 10)
                .addComponent(buscaTelefono))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addGap(32, 32, 32)
                .addComponent(listarTodos)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buscaCodigo)
                    .addComponent(buscaNombre)
                    .addComponent(buscaApellidos)
                    .addComponent(buscaCedula)
                    .addComponent(buscaDireccion)
                    .addComponent(buscaTelefono))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(aceptar))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void aceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aceptarActionPerformed
        // TODO add your handling code here:
        Menu me=new Menu();
        dispose();
        me.setVisible(true);
    }//GEN-LAST:event_aceptarActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formComponentShown

    private void listarTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listarTodosActionPerformed
        // TODO add your handling code here:
        Vector lista = new Vector();
        try {
            lista = listaClientes.consultaCliente();
        } catch (FachadaException fe) {
            JOptionPane.showMessageDialog(null,"Error: " + fe.getMessage());
        }
        Object[][] tabla = new Object[lista.size()][7];
        this.tablaClientes.removeAll();
        if(!lista.isEmpty()){
        for (int i = 0; i < lista.size(); i++) {
            Cliente c = (Cliente) lista.get(i);
            tabla[i][0] = c.getCodigoCliente();
            tabla[i][1] = c.getNombres();
            tabla[i][2] = c.getApellidos();
            tabla[i][3] = c.getCedula();
            tabla[i][4] = c.getDireccion();
            tabla[i][5] = c.getTelefono();
            tabla[i][6] = c.getEmail();
        }
        this.tablaClientes.setModel(new MyTableModel(tabla));
        }
 else{
            JOptionPane.showMessageDialog(null, "No se encontraron clientes");
 }
    }//GEN-LAST:event_listarTodosActionPerformed

    private void buscaCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscaCodigoActionPerformed
        // TODO add your handling code here:
        Vector lista = new Vector();
        String busca=JOptionPane.showInputDialog("Ingrese el código del cliente a buscar");
                try {
            lista = listaClientes.consultaClienteCodigo(busca);
        } catch (FachadaException fe) {
            JOptionPane.showMessageDialog(null,"Error: " + fe.getMessage());
        }
        Object[][] tabla = new Object[lista.size()][7];
        this.tablaClientes.removeAll();
        if(!lista.isEmpty()){
        for (int i = 0; i < lista.size(); i++) {
            Cliente c = (Cliente) lista.get(i);
            tabla[i][0] = c.getCodigoCliente();
            tabla[i][1] = c.getNombres();
            tabla[i][2] = c.getApellidos();
            tabla[i][3] = c.getCedula();
            tabla[i][4] = c.getDireccion();
            tabla[i][5] = c.getTelefono();
            tabla[i][6] = c.getEmail();
        }
        this.tablaClientes.setModel(new MyTableModel(tabla));
        }
        else{
            JOptionPane.showMessageDialog(null, "No se encontraron clientes");
 }
 
    }//GEN-LAST:event_buscaCodigoActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void buscaNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscaNombreActionPerformed
        // TODO add your handling code here:
        Vector lista = new Vector();
        String busca=JOptionPane.showInputDialog("Ingrese el nombre del cliente a buscar");
                try {
            lista = listaClientes.consultaClienteNombres(busca);
        } catch (FachadaException fe) {
            JOptionPane.showMessageDialog(null,"Error: " + fe.getMessage());
        }
        Object[][] tabla = new Object[lista.size()][7];
        this.tablaClientes.removeAll();
        if(!lista.isEmpty()){
        for (int i = 0; i < lista.size(); i++) {
            Cliente c = (Cliente) lista.get(i);
            tabla[i][0] = c.getCodigoCliente();
            tabla[i][1] = c.getNombres();
            tabla[i][2] = c.getApellidos();
            tabla[i][3] = c.getCedula();
            tabla[i][4] = c.getDireccion();
            tabla[i][5] = c.getTelefono();
            tabla[i][6] = c.getEmail();
        }
        this.tablaClientes.setModel(new MyTableModel(tabla));
        }
        else{
            JOptionPane.showMessageDialog(null, "No se encontraron clientes");
 }
    }//GEN-LAST:event_buscaNombreActionPerformed

    private void buscaApellidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscaApellidosActionPerformed
        // TODO add your handling code here:
        Vector lista = new Vector();
        String busca=JOptionPane.showInputDialog("Ingrese el apellido del cliente a buscar");
                try {
            lista = listaClientes.consultaClienteApellidos(busca);
        } catch (FachadaException fe) {
            JOptionPane.showMessageDialog(null,"Error: " + fe.getMessage());
        }
        Object[][] tabla = new Object[lista.size()][7];
        this.tablaClientes.removeAll();
        if(!lista.isEmpty()){
        for (int i = 0; i < lista.size(); i++) {
            Cliente c = (Cliente) lista.get(i);
            tabla[i][0] = c.getCodigoCliente();
            tabla[i][1] = c.getNombres();
            tabla[i][2] = c.getApellidos();
            tabla[i][3] = c.getCedula();
            tabla[i][4] = c.getDireccion();
            tabla[i][5] = c.getTelefono();
            tabla[i][6] = c.getEmail();
        }
        this.tablaClientes.setModel(new MyTableModel(tabla));
        }
        else{
            JOptionPane.showMessageDialog(null, "No se encontraron clientes");
 }
    }//GEN-LAST:event_buscaApellidosActionPerformed

    private void buscaCedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscaCedulaActionPerformed
        // TODO add your handling code here:
        Vector lista = new Vector();
        String busca=JOptionPane.showInputDialog("Ingrese la cédula del cliente a buscar");
                try {
            lista = listaClientes.consultaClienteCedula(busca);
        } catch (FachadaException fe) {
            JOptionPane.showMessageDialog(null,"Error: " + fe.getMessage());
        }
        Object[][] tabla = new Object[lista.size()][7];
        this.tablaClientes.removeAll();
        if(!lista.isEmpty()){
        for (int i = 0; i < lista.size(); i++) {
            Cliente c = (Cliente) lista.get(i);
            tabla[i][0] = c.getCodigoCliente();
            tabla[i][1] = c.getNombres();
            tabla[i][2] = c.getApellidos();
            tabla[i][3] = c.getCedula();
            tabla[i][4] = c.getDireccion();
            tabla[i][5] = c.getTelefono();
            tabla[i][6] = c.getEmail();
        }
        this.tablaClientes.setModel(new MyTableModel(tabla));
        }
        else{
            JOptionPane.showMessageDialog(null, "No se encontraron clientes");
 }
    }//GEN-LAST:event_buscaCedulaActionPerformed

    private void buscaDireccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscaDireccionActionPerformed
        // TODO add your handling code here:
        Vector lista = new Vector();
        String busca=JOptionPane.showInputDialog("Ingrese la dirección del cliente a buscar");
                try {
            lista = listaClientes.consultaClienteDireccion(busca);
        } catch (FachadaException fe) {
            JOptionPane.showMessageDialog(null,"Error: " + fe.getMessage());
        }
        Object[][] tabla = new Object[lista.size()][7];
        this.tablaClientes.removeAll();
        if(!lista.isEmpty()){
        for (int i = 0; i < lista.size(); i++) {
            Cliente c = (Cliente) lista.get(i);
            tabla[i][0] = c.getCodigoCliente();
            tabla[i][1] = c.getNombres();
            tabla[i][2] = c.getApellidos();
            tabla[i][3] = c.getCedula();
            tabla[i][4] = c.getDireccion();
            tabla[i][5] = c.getTelefono();
            tabla[i][6] = c.getEmail();
        }
        this.tablaClientes.setModel(new MyTableModel(tabla));
        }
        else{
            JOptionPane.showMessageDialog(null, "No se encontraron clientes");
 }
          
    }//GEN-LAST:event_buscaDireccionActionPerformed

    private void buscaTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscaTelefonoActionPerformed
        // TODO add your handling code here:
        Vector lista = new Vector();
        String busca=JOptionPane.showInputDialog("Ingrese el teléfono del cliente a buscar");
                try {
            lista = listaClientes.consultaClienteTelefono(busca);
        } catch (FachadaException fe) {
            JOptionPane.showMessageDialog(null,"Error: " + fe.getMessage());
        }
        Object[][] tabla = new Object[lista.size()][7];
        this.tablaClientes.removeAll();
        if(!lista.isEmpty()){
        for (int i = 0; i < lista.size(); i++) {
            Cliente c = (Cliente) lista.get(i);
            tabla[i][0] = c.getCodigoCliente();
            tabla[i][1] = c.getNombres();
            tabla[i][2] = c.getApellidos();
            tabla[i][3] = c.getCedula();
            tabla[i][4] = c.getDireccion();
            tabla[i][5] = c.getTelefono();
            tabla[i][6] = c.getEmail();
        }
        this.tablaClientes.setModel(new MyTableModel(tabla));
        }
        else{
            JOptionPane.showMessageDialog(null, "No se encontraron clientes");
 }
          
    }//GEN-LAST:event_buscaTelefonoActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aceptar;
    private javax.swing.JButton buscaApellidos;
    private javax.swing.JButton buscaCedula;
    private javax.swing.JButton buscaCodigo;
    private javax.swing.JButton buscaDireccion;
    private javax.swing.JButton buscaNombre;
    private javax.swing.JButton buscaTelefono;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton listarTodos;
    private javax.swing.JTable tablaClientes;
    // End of variables declaration//GEN-END:variables

}
